<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[10000个小时成功的谬论]]></title>
      <url>http://yoursite.com/2016/11/14/10000%E4%B8%AA%E5%B0%8F%E6%97%B6%E7%9A%84%E8%B0%AC%E8%AE%BA/</url>
      <content type="html"><![CDATA[<h1 id="10000个小时成功的谬论"><a href="#10000个小时成功的谬论" class="headerlink" title="10000个小时成功的谬论"></a>10000个小时成功的谬论</h1><p>​    关于10000个小时成功的各种新闻,各种鸡汤,各种App层出不穷,世面上也有非常多的成功类书籍,职业指导类书籍也在用这个想法,这个理论.之前我也觉得这个想法不错啊,居然可以这样成功哦,是不是我也有可能这样迎娶白富美,从此走上人生巅峰,然后我在手机里也下了一个App,用来统计我想要在人生技能树上所点的点数.</p>
<p>​    但是我发现,这个转换关系,这里的逻辑非常的混乱.</p>
<p>​    我想到:成功是可以通过技能树上面的点点点来达到某个值就行了的吗(比如说10000).那么,首先就要确定说10000个小时成功这个理论要成立.</p>
<p>​    很不幸的是,到目前为止,10000个小时还没有人实际的去验证过,没有这样的实际数据,案例.<a href="https://thesandtrap.com/b/thrash_talk/post_mortem_on_the_dan_plan" target="_blank" rel="external">有一个美国人Dan尝试这个理论,结果没到10000个小时就放弃了</a>.<a href="https://en.wikipedia.org/wiki/Dan_McLaughlin_(golfer" target="_blank" rel="external">挑战者的维基百科</a>)</p>
<p>下面这位记者的看法我非常的认同啊.一个人练练练,只是浪费各种时间,没有系统的路线,没有人指导,没有一个反馈环怎么行,需要微调的.很不幸的是,挑战者 a “meta” experience 这个愿望都没有实现.只给世人留下了一张没有完成的藏宝图.最后:Dan has quit the plan and now sells soda.</p>
<blockquote>
<p>He started bouncing around instructors and posting swings that looked like he was not progressing as I would have hoped. Then as I looked deeper I could not find any information on what he was doing for deliberate practice. Some gym work, hitting balls, but nothing specific about what his practice routine was. I began to become disenfranchised.</p>
<p>As an engineer I felt his process for improving was a mess. I began to worry that at the conclusion of the Dan Plan were not going to be able to determine anything about the ten-thousand-hour theory. No conclusion, nothing. The investment of my time to follow him was going to be wasted.</p>
</blockquote>
<p>​    </p>
<p>更不幸的是往上看10000个小时,这个10000这个数字提出来是什么鬼,他怎么不是10000,然后我发现</p>
<ol>
<li><p>1985年，芝加哥大学的 Benjamin Bloom 教授发现，所有被调查的精英人物，无一不是投入大量时间，刻苦练习。成就越大的人，似乎越勤奋，钻研业务的时间也越长。</p>
<p>他最后的观点就是：天才不是天生的，而是后天训练出来的。</p>
</li>
<li><p>1993年，迈阿密大学的 Anders Ericsson 教授到柏林音乐学院,将那里的学生分成三组：普通的学生、优秀的学生、卓越的学生,一番数学统计,发现:普通的学生，练习弹琴的时间，总计在4000小时左右；优秀的学生，大约在8000小时左右；卓越的学生，没有一个人低于10000小时。然后发表一篇论文.《有目的的训练在专业人才培养中的作用》（The Role of Deliberate Practice in the Acquisition of Expert Performance）</p>
<p>​</p>
</li>
<li><p>2008年，畅销书作家 Malcolm Gladwell 将这篇论文写进了他的新书《异类：成功人士的故事》（Outliers: The Story of Success）。他概念化了原始论文的结论，宣称存在一个“10000小时规则”（10000 hour rule），即成功至少需要10000个小时的投入。</p>
<p>​</p>
</li>
<li><p>2009年，一位名叫 Dan McLaughlin 的人，读到了这本书。</p>
<p>他是一位商业摄影师，但是对自己的工作，越来越没有兴趣。他想要改变人生。这本书启发了他。</p>
<p>接下来的故事…</p>
<p>​</p>
</li>
</ol>
<p>这个10000个小时,就是这样来的,人们是这样玩的,你们玩吧,我就不陪你们玩了.</p>
<p>参考:<a href="https://ruanyf.github.io/survivor/plan-b/dan-plan.html" target="_blank" rel="external">重新定义人生的10000个小时</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[markdown学习笔记]]></title>
      <url>http://yoursite.com/2016/09/20/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%9A%84%E5%89%AF%E6%9C%AC/</url>
      <content type="html"><![CDATA[<p>想要设置 —&gt;YAML Front Matters<br>三个减号 然后enter</p>
<p><a href="http://commonmark.cn/help/tutorial/index.html" target="_blank" rel="external">通用markdow练习!!!!赞!赞!赞!</a> </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这个索引通过[toc]来实现</div></pre></td></tr></table></figure>
<p>[TOC]</p>
<h2 id="诗的引用"><a href="#诗的引用" class="headerlink" title="诗的引用"></a>诗的引用</h2><blockquote>
<ul>
<li>引用:</li>
</ul>
<blockquote>
<p>一盏灯,一处昏黄;一简书,一杯淡茶.守着那一份淡定,品读属于自己的寂寞.保持淡定,才能欣赏到最美丽的风景!保持淡定,人生从此不再寂寞.</p>
</blockquote>
<p>朝辞白帝彩云间</p>
<p>千里江陵一日还</p>
<p>两岸猿声啼不住</p>
<p>轻舟已过万重山</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 引用</div><div class="line">&gt;</div><div class="line">&gt; 引用</div></pre></td></tr></table></figure>
<h2 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">*斜体*</div><div class="line">**粗体**</div><div class="line">__粗体__</div></pre></td></tr></table></figure>
<p><em>斜体</em><br><strong>粗体</strong><br><strong>粗体</strong></p>
<h2 id="制表"><a href="#制表" class="headerlink" title="制表"></a>制表</h2><p><code>command + T</code>   </p>
<p><code>注意:表格在从多到少的过程中,多出的部分会被自动删除掉,当然,我可以command + Z</code></p>
<table>
<thead>
<tr>
<th>超赞啊</th>
<th>这是第二</th>
<th>这是第三</th>
<th>这是第四</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>这是第</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>这是第col2,row5</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="来看看代码和数学公式输入"><a href="#来看看代码和数学公式输入" class="headerlink" title="来看看代码和数学公式输入:"></a>来看看代码和数学公式输入:</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><blockquote>
<p>行内代码     <code>这是行内代码</code>  这是左右二边加了一个`   </p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="type">NSString</span> *str = @<span class="string">"sxiaobb@yeah.net"</span>;</div><div class="line"><span class="type">NSUrl</span> *url = @<span class="string">"baidu.com"</span>;</div><div class="line"></div><div class="line"><span class="number">6</span>^<span class="number">2</span>+<span class="number">53333</span>*<span class="number">3</span>-<span class="number">4</span>/<span class="number">23</span>=?</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Here&apos;s an example:</div><div class="line"></div><div class="line">​</div></pre></td></tr></table></figure>
<p>function test() {<br>  console.log(“notice the blank line before this function?”);<br>}<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">syntax highlighting:</div><div class="line">​```ruby</div><div class="line">require &apos;redcarpet&apos;</div><div class="line">markdown = Redcarpet.new(&quot;Hello World!&quot;)</div><div class="line">puts markdown.to_html</div><div class="line">​</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Here&apos;s an example:</div></pre></td></tr></table></figure>
<p>function test() {<br>  console.log(“notice the blank line before this function?”);<br>}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">syntax highlighting:</div><div class="line">```ruby</div><div class="line">require &apos;redcarpet&apos;</div><div class="line">markdown = Redcarpet.new(&quot;Hello World!&quot;)</div><div class="line">puts markdown.to_html</div></pre></td></tr></table></figure></p>
<h3 id="数学式子"><a href="#数学式子" class="headerlink" title="数学式子"></a>数学式子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$$</div><div class="line">\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 =  \begin&#123;vmatrix&#125; </div><div class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</div><div class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</div><div class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</div><div class="line">\end&#123;vmatrix&#125;</div><div class="line">$$</div></pre></td></tr></table></figure>
<p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$</p>
<p><strong>用$$ 开头 用$$结尾</strong></p>
<h2 id="task-list"><a href="#task-list" class="headerlink" title="task list"></a>task list</h2><p><code>- [ ]</code> 在后面还有一个空格,依次输入 -,空格,[,空格,],空格.  这样六个字符…..</p>
<ul>
<li>[ ] complete</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">如果要输出勾选了的 那是 - [X] 这样,注意:] 后面还有一个空格</div></pre></td></tr></table></figure>
<ul>
<li>[x] ​</li>
</ul>
<h2 id="有序和无序列"><a href="#有序和无序列" class="headerlink" title="有序和无序列"></a>有序和无序列</h2><h3 id="无序"><a href="#无序" class="headerlink" title="无序"></a>无序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">* list1</div><div class="line">- list</div><div class="line">+ list</div><div class="line">- list  - list2 - list</div><div class="line">- list</div></pre></td></tr></table></figure>
<ul>
<li>list1</li>
</ul>
<ul>
<li>list</li>
</ul>
<ul>
<li>list</li>
</ul>
<ul>
<li>list  - list2 - list</li>
<li>list</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">* asfa  行一</div><div class="line">  * asff   行二</div><div class="line">    * sdf  行三</div><div class="line">      * sfff  行四</div><div class="line">        * adf  行五</div><div class="line">像这样一级一级下去,是写好行一后enter 再tab一下 出现行二  类推下去</div></pre></td></tr></table></figure>
<ul>
<li>asfa<ul>
<li>asff<ul>
<li>sdf<ul>
<li>sfff<ul>
<li>ad</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="有序"><a href="#有序" class="headerlink" title="有序"></a>有序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. name</div><div class="line">2. property</div><div class="line">3. test   像这样enter下去,前面的标号会自动加上去</div></pre></td></tr></table></figure>
<ol>
<li>name</li>
<li>property</li>
<li>test</li>
<li>​</li>
</ol>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><h3 id="第一种情况"><a href="#第一种情况" class="headerlink" title="第一种情况"></a>第一种情况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</div><div class="line"></div><div class="line">[This link](http://example.net/) has no title attribute.</div></pre></td></tr></table></figure>
<p>This is <a href="http://example.com" title="Title属性" target="_blank" rel="external">an example</a> inline link.   ( 这个和下面这一行没什么区别啊!!)(加了一个title属性,然并卵)</p>
<p><a href="http://example.net/" target="_blank" rel="external">This link</a> has no title attribute.</p>
<h3 id="第二-参考式-link-text-name"><a href="#第二-参考式-link-text-name" class="headerlink" title="第二:参考式[link text][name]"></a>第二:参考式<code>[link text][name]</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[link text][A]</div><div class="line">[A]: www.baidu.com</div></pre></td></tr></table></figure>
<p><a href="www.google.com">link text</a>  </p>
<p>(<code>[id]: http://example.com/  &quot;Optional Title Here&quot;</code>)(原来这个是这样用! 必须是www.baidu.com)</p>
<p><a href="www.google.com">link text</a></p>
<ul>
<li>下面是一个参考式链接的范例：</li>
</ul>
<p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.</p>
<ul>
<li>如果改成用链接名称的方式写：(这样就省略了name,直接用前面的来做name)</li>
</ul>
<p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.</p>
<ul>
<li>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</li>
</ul>
<p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a><br>than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or<br><a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.(和用二个[]的做比较而已)</p>
<p><strong>参考式总结:参考式的链接其实重点不在于它比较好写，而是它比较好读</strong></p>
<h3 id="然而-最简单的超链接"><a href="#然而-最简单的超链接" class="headerlink" title="然而,最简单的超链接"></a>然而,最简单的超链接</h3><p><code>&lt;http://example.com/&gt;</code>  右右一个&lt; &gt; 就搞定了   </p>
<p><a href="http://example.com/" target="_blank" rel="external">http://example.com/</a></p>
<p><baidu.com>  这样不行。。。(要加上http://)   <abd>   <a href="http://baidu.com" target="_blank" rel="external">http://baidu.com</a></abd></baidu.com></p>
<p><a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#122;&#x62;&#121;&#x32;&#x30;&#x30;&#56;&#108;&#x6b;&#119;&#x40;&#49;&#x36;&#x33;&#46;&#99;&#x6f;&#109;">&#122;&#x62;&#121;&#x32;&#x30;&#x30;&#56;&#108;&#x6b;&#119;&#x40;&#49;&#x36;&#x33;&#46;&#99;&#x6f;&#109;</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>下面来插入图片 格式:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![](https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/bd_logo1_31bdc765.png)</div></pre></td></tr></table></figure>
<p><img src="https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/bd_logo1_31bdc765.png" alt=""></p>
<ul>
<li><p>参考式的图片语法则长得像这样：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![Alt text][id]</div></pre></td></tr></table></figure>
<p>​</p>
</li>
</ul>
<p><img src="http://www.beian.gov.cn/img/beianbgs.png" alt="Alt text" title="Optional title attribute"><br><code>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</code></p>
<h3 id="第二种情况-显示链接中带括号的图片"><a href="#第二种情况-显示链接中带括号的图片" class="headerlink" title="第二种情况(显示链接中带括号的图片)"></a>第二种情况(显示链接中带括号的图片)</h3><p>链接中带括号,所以用二个[];</p>
<p><img src="http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1" alt=""></p>
<h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p><del>删除掉自己</del>   这个是在左右二边分别加上二个~~    <del>这样写删除线</del></p>
<h2 id="制表符"><a href="#制表符" class="headerlink" title="制表符\"></a>制表符\</h2><p>#</p>
<p>\</p>
<p>*</p>
<p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<p>\   反斜线<br>`   反引号</p>
<ul>
<li>星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<h2 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h2></li>
</ul>
<ul>
<li>加号</li>
</ul>
<ul>
<li>减号<br>.   英文句点<br>!   惊叹号</li>
</ul>
<h2 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h2><p>​:smile:  这个是这样打出来的: <code>:smile:</code>  左右一个冒号</p>
<p>¥100!!!   <figure class="highlight plain"><figcaption><span>¥100</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">## 下标和上标</div><div class="line"></div><div class="line">用右右&lt;u&gt;分别&lt;/u&gt;一个~</div></pre></td></tr></table></figure></p>
<p>H~2~O<br>H^2^<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">H~2~O</div><div class="line">H^2^</div><div class="line"></div><div class="line">## 下划线</div><div class="line"></div><div class="line">&lt;u&gt;下划线&lt;/u&gt;</div></pre></td></tr></table></figure></p>
<p><u>下划线产</u><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 角注 注释</div><div class="line"></div><div class="line">```markdown</div><div class="line">You can create footnotes like this[^footnote].</div><div class="line"></div><div class="line">[^footnote]: Here is the *text* of the **footnote**.</div></pre></td></tr></table></figure></p>
<p>You can create footnotes like this[^footnote].</p>
<p>[^footnote]: Here is the <em>text</em> of the <strong>footnote</strong>.</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">我来试试角注,这个世界谁最帅[^答案].</div><div class="line"></div><div class="line">[<span class="symbol">^答案</span>]: <span class="link">这个世界最帅的当然是作者.</span></div></pre></td></tr></table></figure>
<p>我来试试角注,这个世界谁最帅<a href="这个世界最帅的当然是作者.">^答案</a>.</p>
<h2 id="水平分隔线"><a href="#水平分隔线" class="headerlink" title="水平分隔线"></a>水平分隔线</h2><hr>
<hr>
<p>Input <code>***</code> or <code>---</code> on a blank line and press <code>return</code> will draw a horizontal line.</p>
<h2 id="Inline-Formatting-行内样式"><a href="#Inline-Formatting-行内样式" class="headerlink" title="Inline Formatting  行内样式"></a>Inline Formatting  行内样式</h2><p>The following is a list of optional inline markups supported:</p>
<table>
<thead>
<tr>
<th>Option name</th>
<th>Markup</th>
<th>Result if enabled</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Intra-word emphasis</td>
<td>So A*maz*ing</td>
<td>So A<em>maz</em>ing</td>
<td></td>
</tr>
<tr>
<td>Strikethrough</td>
<td>~~Much wow~~</td>
<td><del>Much wow</del></td>
<td></td>
</tr>
<tr>
<td>Underline [^under]</td>
<td>_So doge_</td>
<td><u>So doge</u></td>
<td></td>
</tr>
<tr>
<td>Quote [^quote]</td>
<td>\”Such editor\”</td>
<td><q>Such editor</q></td>
<td></td>
</tr>
<tr>
<td>Highlight(高亮)</td>
<td>\==So good\==</td>
<td><mark>So good</mark></td>
<td></td>
</tr>
<tr>
<td>Superscript</td>
<td>hoge\^(fuga)</td>
<td>hoge<sup>fuga</sup></td>
<td></td>
</tr>
<tr>
<td>Autolink</td>
<td><a href="http://t.co" target="_blank" rel="external">http://t.co</a></td>
<td><a href="http://t.co" target="_blank" rel="external">http://t.co</a></td>
<td></td>
</tr>
<tr>
<td>Footnotes</td>
<td>[\^4] and [\^4]:</td>
<td>[^4] and footnote 4</td>
</tr>
</tbody>
</table>
<p>Happy writing! [^4]</p>
<p>[^4]: test from by </p>
<p>[^emphasize]: If <strong>Underlines</strong> is turned on, <code>_this notation_</code> will render as underlined instead of emphasized </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[swift start]]></title>
      <url>http://yoursite.com/2016/07/29/swift%20start/</url>
      <content type="html"><![CDATA[<h1 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span> </span>&#123;</div><div class="line">    <span class="keyword">var</span> bugs: <span class="type">Int</span></div><div class="line">    <span class="keyword">var</span> hasMusic: <span class="type">Bool</span></div><div class="line">    <span class="keyword">var</span> levels: <span class="type">Int</span></div><div class="line">    </div><div class="line">    <span class="keyword">init</span>(bugs: <span class="type">Int</span>, hasMusic: <span class="type">Bool</span>, levels: <span class="type">Int</span>) &#123;</div><div class="line">        <span class="keyword">self</span>.bugs = bugs</div><div class="line">        <span class="keyword">self</span>.hasMusic = hasMusic</div><div class="line">        <span class="keyword">self</span>.levels = levels</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="func"><a href="#func" class="headerlink" title="func"></a>func</h1><p><img src="https://d17h27t6h515a5.cloudfront.net/topher/2016/September/57e42c4e_say-hello-highlight/say-hello-highlight.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">有返回值的func</div><div class="line">func nameOfFunction(/* parameters */) -&gt; Type &#123;</div><div class="line">    var valueToReturn: Type</div><div class="line">    // 函数的其余代码</div><div class="line">    return valueToReturn</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="一开始设置了默认的值：0-15"><a href="#一开始设置了默认的值：0-15" class="headerlink" title="一开始设置了默认的值：0.15"></a>一开始设置了默认的值：0.15</h4><p><img src="https://d17h27t6h515a5.cloudfront.net/topher/2016/September/57e4355d_tip-percent-2/tip-percent-2.png" alt=""></p>
<h3 id="2-func进阶"><a href="#2-func进阶" class="headerlink" title="2.func进阶:"></a>2.func进阶:</h3><blockquote>
<p><strong>==函数重载==</strong></p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">House</span> </span>&#123;</div><div class="line">    <span class="keyword">let</span> numberOfBedrooms: <span class="type">Int</span></div><div class="line">    <span class="keyword">let</span> numberOfBathrooms: <span class="type">Int</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">doubleMe</span><span class="params">(number: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</div><div class="line">    <span class="keyword">return</span> number * <span class="number">2</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">doubleMe</span><span class="params">(string: String)</span></span> -&gt; <span class="type">String</span> &#123;</div><div class="line">    <span class="keyword">return</span> string + string</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">doubleMe</span><span class="params">(house: House)</span></span> -&gt; <span class="type">House</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="type">House</span>(numberOfBedrooms: house.numberOfBedrooms * <span class="number">2</span>,</div><div class="line">        numberOfBathrooms: house.numberOfBathrooms * <span class="number">2</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在 Swift 中这是可行的，因为编译器的智能足以检测函数调用时传入的参数类型，并选择正确的 doubleMe 函数</p>
<p><img src="https://d17h27t6h515a5.cloudfront.net/topher/2016/September/57e440a6_double-example/double-example.png" alt=""></p>
<p>在此，每个函数调用对应 doubleMe 的版本，对于后者，自变量类型匹配参数类型。这种定义函数的方式称为<strong>函数重载</strong>，因为我们已经根据参数“重载”了单个函数名称，从而具有许多含义。</p>
<blockquote>
<p><strong>==元组==</strong></p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> myTuple = (<span class="string">"Question 1"</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">true</span>)</div><div class="line"></div><div class="line"><span class="built_in">print</span>(myTuple.<span class="number">0</span>) <span class="comment">// prints "Question 1"</span></div><div class="line"><span class="built_in">print</span>(myTuple.<span class="number">3</span>) <span class="comment">// prints "true"</span></div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">func funcName(paraments:type) -&gt; (type1,type2) &#123;</div><div class="line">  return value1,value2 //value1,value2 的类型分别为 type1,type2</div><div class="line">&#125;</div><div class="line">let bytuple = funcName(paraments:argument)</div><div class="line">bytuple.0 //得到返回的value1</div><div class="line">bytuple.1 //得到返回的value2</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">如果是这样-&gt; (up: Bool, right: Bool, down: Bool, left: Bool, numberOfWalls: Int)</div><div class="line">那么就可以myTuple.up</div><div class="line">myTuple.down</div><div class="line">myTuple.left</div><div class="line">myTuple.numberOfWalls</div><div class="line">这样通过点运算来取值</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>==In-Out参数==</strong></p>
</blockquote>
<p><img src="https://d17h27t6h515a5.cloudfront.net/topher/2016/September/57e44477_inout/inout.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">如果我们希望对参数的更改在调用函数后保留下来，则需要将参数声明为输入-输出参数（注意：您无法将常量作为输入-输出参数传递到函数中）：如上图</div><div class="line"></div><div class="line">为声明参数为 in-out，我们在参数名称前面添加了关键字 inout。此外，我们还必须在通过引用传递值的参数名称前面放一个与号 (&amp;)。“通过引用传递”意味着不创建副本，在函数内部修改参数，而函数外部的参数都是相同的。您在上面可以看到，stats 在函数内进行了修改，在函数调用之后，这些更改仍然保留。</div><div class="line"></div><div class="line">注意：In-out 参数与函数的返回值是不一样的。</div><div class="line">in-out 参数让我们能够在函数内部更改参数值，并将这些更改反映在函数外部，我们必须注意这些类型的参数。</div></pre></td></tr></table></figure>
<blockquote>
<p>==<strong>内部与外部参数名</strong>==</p>
<p>就是调用函数的时候省略掉了parament</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">func addExcitementToString(_ string: String) -&gt; String &#123;</div><div class="line">    return string + &quot;!&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">addExcitementToString(&quot;Swift&quot;) //这二句是一样的</div><div class="line">addExcitementToString(string: &quot;Swift&quot;) // 我们需要忽略掉它！</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">func combineStrings(_ s1: String, _ s2: String) -&gt; String &#123;</div><div class="line">    return s1 + s2</div><div class="line">&#125;</div><div class="line"></div><div class="line">combineStrings(&quot;We love&quot;, &quot; Swift!&quot;)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>==enum==</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">enum Season &#123;</div><div class="line">    case Fall</div><div class="line">    case Winter</div><div class="line">    case Spring</div><div class="line">    case Summer</div><div class="line"> &#125;</div><div class="line"></div><div class="line">let myFavoriteSeason = Season.Fall</div><div class="line">var favoriteActivity = &quot;&quot;</div><div class="line"></div><div class="line">switch (myFavoriteSeason) &#123;</div><div class="line">    case .Fall:</div><div class="line">        favoriteActivity = &quot;seeing the leaves change color.&quot;</div><div class="line">    case .Winter:</div><div class="line">       favoriteActivity = &quot;skiing.&quot;</div><div class="line">    case .Spring:</div><div class="line">        favoriteActivity = &quot;seeing the wildflowers bloom&quot;</div><div class="line">    case .Summer:</div><div class="line">        favoriteActivity = &quot;swimming in the river&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p>请记住，属性和方法与特定类型有关联：属性好比值，而方法好比函数（它们本质相同，只是属性和方法是设计层面的术语，而值和函数是程序层面的术语。）。</p>
<blockquote>
<p>==<strong>reverse() 翻转</strong>==</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Reverse the characters in a string 翻转：比如，把zby 翻转为ybz</span></div><div class="line"><span class="keyword">var</span> forwardString = <span class="string">"spoons"</span></div><div class="line"><span class="keyword">var</span> charactersReversed = forwardString.characters.reversed()  <span class="comment">//reversed()方法返回所有字符的集合而不是一个字符串</span></div><div class="line"><span class="keyword">var</span> backwardsString = <span class="type">String</span>(charactersReversed)  <span class="comment">//使用 String 初始化方法来它转化为字符串类型。</span></div></pre></td></tr></table></figure>
<blockquote>
<p>字符串组</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Concatenation</span></div><div class="line"><span class="keyword">let</span> theTruth = <span class="string">"Money can't buy me love"</span></div><div class="line"><span class="keyword">let</span> alsoTrue = <span class="string">"but it can buy me a boat."</span></div><div class="line"><span class="keyword">let</span> combinedTruths = theTruth + <span class="string">", "</span> + alsoTrue</div><div class="line"></div><div class="line"><span class="comment">// Finding a substring within a string</span></div><div class="line"><span class="keyword">var</span> word = <span class="string">"fortunate"</span></div><div class="line">word.<span class="built_in">contains</span>(<span class="string">"tuna"</span>)</div><div class="line"></div><div class="line"><span class="comment">// Replacing a substring </span></div><div class="line"><span class="keyword">var</span> password = <span class="string">"Mary had a little loris"</span></div><div class="line"><span class="keyword">var</span> newPassword = password.replacingOccurrences(of: <span class="string">"a"</span>, with: <span class="string">"A"</span>)</div></pre></td></tr></table></figure>
<h1 id="零值"><a href="#零值" class="headerlink" title="零值"></a>零值</h1><h1 id="可选值"><a href="#可选值" class="headerlink" title="可选值"></a>可选值</h1><p>option</p>
<p>可选值类型可作为参数传递给函数</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">pickUpGroceries</span><span class="params">(car:Car?)</span></span> &#123;</div><div class="line">    <span class="keyword">if</span> <span class="keyword">let</span> car = car &#123;</div><div class="line">        <span class="built_in">print</span>(<span class="string">"We'll pick up the groceries in the (car.model)"</span>)</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">print</span>(<span class="string">"Let's walk to the store"</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>此函数容纳可选值类型 Car? 的参数。如果变量 car 有值，则开车到杂货店。如果 car 为零值，则步行到商店。以下是这两种情况可能显示的内容：</p>
<p>var someCar = Car(make: “Toyota”, model: “Corolla”)<br>pickUpGroceries(someCar)<br>然后输出可能为: We’ll pick up the groceries in the Corolla</p>
<p>在为零值的情况下:</p>
<p>pickUpGroceries(nil)<br>输出为: Let’s walk to the store</p>
<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// The verbose way</div><div class="line">var numbers = Array&lt;Double&gt;()</div><div class="line"></div><div class="line">// More often you will see ...</div><div class="line">var moreNumbers = [Double]()</div><div class="line"></div><div class="line">// Array literal syntax</div><div class="line">let differentNumbers = [97.5, 98.5, 99.0]</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac端python支持中文]]></title>
      <url>http://yoursite.com/2016/07/25/Mac%E7%AB%AFpython%E6%94%AF%E6%8C%81%E4%B8%AD%E6%96%87/</url>
      <content type="html"><![CDATA[<p>>>> WARNING: The version of Tcl/Tk (8.5.9) in use may be unstable. Visit <a href="http://www.python.org/download/mac/tcltk/" target="_blank" rel="external">http://www.python.org/download/mac/tcltk/</a> for current information.</p>
<p>Mac新安装的 3.5版本  打开IDLE 会出现如上这句.这是在说Tcl/Tk (8.5.9) 没安装好</p>
<p>解决方法: 打开终端,进入brew</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew</div></pre></td></tr></table></figure>
<p>然后</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install tcl-tk</div></pre></td></tr></table></figure>
<p>这时终端会建议:To install it, run:<br>  brew install homebrew/dupes/tcl-tk</p>
<p>听他的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install homebrew/dupes/tcl-tk</div></pre></td></tr></table></figure>
<p>等待一会儿,就把tcl-tk-8.6.6 给装好了</p>
<p><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong>以上是没用的!!<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></p>
<p><a href="https://www.webucator.com/blog/2015/02/idle-warning-the-version-of-tcltk-8-5-9-in-use-may-be-unstable/" target="_blank" rel="external">https://www.webucator.com/blog/2015/02/idle-warning-the-version-of-tcltk-8-5-9-in-use-may-be-unstable/</a></p>
<p>正解如下:1,登入到这个网站<a href="http://www.activestate.com/activetcl/downloads" target="_blank" rel="external">http://www.activestate.com/activetcl/downloads</a></p>
<p>根据需要下载正解的版本(不要下载最新的,比如我的警告是让我去8.5.9 那这里我下载8.5.18.0 这个版本)</p>
<p><img src="http://ww1.sinaimg.cn/large/72f96cbajw1f85yntpwmuj20mh06yab4.jpg" alt=""></p>
<p>下载完成了安装后重启IDLE即可!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[今天立个flag]]></title>
      <url>http://yoursite.com/2016/07/18/%E4%BB%8A%E5%A4%A9%E7%AB%8B%E4%B8%AAflag/</url>
      <content type="html"><![CDATA[<h1 id="今天立个flag"><a href="#今天立个flag" class="headerlink" title="今天立个flag"></a>今天立个flag</h1><blockquote>
<p>最近感觉身体有点差了</p>
</blockquote>
<p>一定要多运动，多健身。</p>
<p>平常常起来走动一下，活动一下身体的备注循环，活动一下心肺功能，放松一下眼睛和脖子。</p>
<p>这还是其次，重要的是要有一个强健的身体。</p>
<p>为了激发我的内在潜力，我决定接下来，只要天气可以用冷水洗手，那么就坚持用冷水来洗澡！</p>
<p>这样我就不得不在洗澡前好好的热身热身了！</p>
<p>这是基本限度</p>
<p>每天Keep30分钟，还是可以的，#每日健身打卡</p>
<p><img src="http://ww4.sinaimg.cn/large/72f96cbagw1f7umvhnxj0j21kw0zkwvw.jpg" alt=""></p>
<p># </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[在云端更新博客]]></title>
      <url>http://yoursite.com/2016/07/15/%E5%9C%A8%E4%B8%80%E5%8F%B0%E9%99%8C%E7%94%9F%E7%9A%84%E7%94%B5%E8%84%91%E4%B8%8A%E9%9D%A2%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="在一台陌生的电脑上面更新已经创建好的博客"><a href="#在一台陌生的电脑上面更新已经创建好的博客" class="headerlink" title="在一台陌生的电脑上面更新已经创建好的博客"></a>在一台陌生的电脑上面更新已经创建好的博客</h1><blockquote>
<p>使用场景:在公司的电脑上更新博客.</p>
</blockquote>
<h2 id="1-搭建平台"><a href="#1-搭建平台" class="headerlink" title="1,搭建平台"></a>1,搭建平台</h2><h3 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1).安装git"></a>1).安装git</h3><h3 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2).安装node.js"></a>2).安装node.js</h3><p>官网安装</p>
<h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3).安装hexo"></a>3).安装hexo</h3><blockquote>
<p>安装好git和node后,执行命令安装hexo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; $ sudo npm install -g hexo</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p>安装好后,难证一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo version</div></pre></td></tr></table></figure>
<blockquote>
<p>初始化一下hexo</p>
</blockquote>
<p>在想保存博客项目的地方创建文件夹,终端cd进入,执行init命令初始化hexo到你指定的目录，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure>
<blockquote>
<p>验证一下是否初始化好</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<p>然后浏览器打开  <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> </p>
<p>将出现Hexo的欢迎界面.终端ctrl+c退出本地模式.</p>
<h2 id="2-克隆项目"><a href="#2-克隆项目" class="headerlink" title="2.克隆项目"></a><del>2.克隆项目</del></h2><blockquote>
<p><del>把项目克隆到本地.</del></p>
</blockquote>
<p><del>克隆下来的文件里面已经有博客的配置以及主题的设置了!</del></p>
<p><del>验证一下是否克隆成功,(先cd进那个)</del></p>
<h2 id="2-配置平台"><a href="#2-配置平台" class="headerlink" title="2.配置平台"></a><del>2.配置平台</del></h2><h2 id="把保存在云端的文件下载来覆盖新建创建的hexo文件…"><a href="#把保存在云端的文件下载来覆盖新建创建的hexo文件…" class="headerlink" title="把保存在云端的文件下载来覆盖新建创建的hexo文件…"></a><del>把保存在云端的文件下载来覆盖新建创建的hexo文件…</del></h2><h3 id="也可以保存在github仓库的分支里面"><a href="#也可以保存在github仓库的分支里面" class="headerlink" title="也可以保存在github仓库的分支里面"></a><del>也可以保存在github仓库的分支里面</del></h3><p><del>把分支下载下来,hexo直接</del></p>
<h2 id="参考文件"><a href="#参考文件" class="headerlink" title="参考文件:"></a><del>参考文件:</del></h2><h1 id="在云端更新博客"><a href="#在云端更新博客" class="headerlink" title="在云端更新博客"></a>在云端更新博客</h1><p>hexo的初始化文件,即folder文件保存在dropbox里面.然后正常操作,换电脑了的话,就在新电脑内安装环境,就行了.</p>
<h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[更换gem服务器.md]]></title>
      <url>http://yoursite.com/2016/07/06/%E6%9B%B4%E6%8D%A2gem%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<h1 id="Ruby-China-的-RubyGems-镜像上线"><a href="#Ruby-China-的-RubyGems-镜像上线" class="headerlink" title="Ruby China 的 RubyGems 镜像上线"></a>Ruby China 的 RubyGems 镜像上线</h1><p>搭建了 ruby.taobao.org 为国内开发者解决 Gem 安装的问题</p>
<p><a href="https://ruby-china.org/topics/29250" target="_blank" rel="external">简介</a></p>
<p><a href="https://gems.ruby-china.org" target="_blank" rel="external">使用方法</a></p>
<blockquote>
<p>如何使用？</p>
<p>请尽可能用比较新的 RubyGems 版本，建议 2.6.x 以上。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; $ gem update --system # 这里请翻墙一下,建议使用 $ sudo gem update --system</div><div class="line">&gt;</div><div class="line">&gt; $ gem -v    </div><div class="line">&gt;</div><div class="line">&gt; 2.6.7</div><div class="line">&gt;</div><div class="line">&gt; $ gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/</div><div class="line">&gt;</div><div class="line">&gt; $ gem sources -l</div><div class="line">&gt;</div><div class="line">&gt; https://gems.ruby-china.org</div><div class="line">&gt;</div><div class="line">&gt; 确保只有 gems.ruby-china.org</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Github&Hexo&Next搭建个人博客实践]]></title>
      <url>http://yoursite.com/2016/06/24/Github-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%AE%9E%E8%B7%B5/</url>
      <content type="html"><![CDATA[<h1 id="搭建Github-Pages"><a href="#搭建Github-Pages" class="headerlink" title="搭建Github Pages"></a>搭建Github Pages</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>下载安装</p>
<h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><ul>
<li>去<a href="https://nodejs.org/en/" target="_blank" rel="external">node官网</a></li>
</ul>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><ul>
<li><p>验证是否安装成功</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo version</div></pre></td></tr></table></figure>
</li>
<li><p>如出现错误:<code>Missing+write+access+to+/usr/local/lib/node_modules</code></p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install --unsafe-perm --verbose -g hexo  //需要输入密码时输入密码</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><ul>
<li><p>直接在[yourname] 这个文件夹下创建一个folder名字的文件夹,并将会在指定文件夹(folder)中新建建站所需要的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init folder  //这样就是</div></pre></td></tr></table></figure>
<p>​    注:如果成功会显示:INFO  Start blogging with Hexo!    </p>
</li>
<li><p>初始化成功的folder文件夹下文件层级如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── source</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes</div></pre></td></tr></table></figure>
</li>
<li><p>生成静态页面至hexo\public\目录。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd /Users/yourMacName/folder //cd 到你的init目录。yourMacName为你电脑的名称文件夹</div><div class="line">$hexo generate （hexo g 也可以) //生成静态页面至hexo\public\目录。如成功,会在folder目录下创建一个public文件夹</div></pre></td></tr></table></figure>
</li>
<li><p>本地启动<br>启动本地服务，进行文章预览调试，命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>浏览器输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a><br>或者点击网址<a href="http://0.0.0.0:4000" target="_blank" rel="external">http://0.0.0.0:4000</a> </p>
<p>更多问题参见:<a href="http://baixin.io/2015/08/HEXO搭建个人博客/" target="_blank" rel="external">这里</a></p>
</li>
</ul>
<ul>
<li>本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。</li>
</ul>
<h2 id="与github关联"><a href="#与github关联" class="headerlink" title="与github关联"></a>与github关联</h2><ul>
<li>在folder文件夹内,找到<code>_config.yml</code> 这个文件,用文本编辑器打开.翻到最下面编辑如下:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/yourID/yourID.github.io.git  </div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">注:1.博主本人的报错为bad indentation of a mapping entry at line 73, column 10: branch: master</div><div class="line">请确认您使用空格进行缩进（Soft tab），并确认冒号后有一个空格。</div><div class="line">   2.yourID请换成自己的用户名。这个地址为SSH地址</div></pre></td></tr></table></figure>
<ul>
<li><p><code>_config.yml</code>文件编辑保存后,执行如下命令git部署</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git —save</div></pre></td></tr></table></figure>
</li>
<li><p><code>hexo deploy</code> 成功后显示:INFO  Deploy done: git</p>
</li>
<li><p>现在浏览器打开,<a href="http://yourID.github.io" target="_blank" rel="external">http://yourID.github.io</a></p>
</li>
<li><p>更多问题参见:<a href="http://baixin.io/2015/08/HEXO搭建个人博客/" target="_blank" rel="external">这里</a></p>
</li>
</ul>
<h2 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h2><ul>
<li>我这里使用的是Next主题,这是他的<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">使用文档</a>;</li>
</ul>
<blockquote>
<p>在 folder文件夹内有两份主要的配置文件，其名称都是 config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 ==站点配置文件==(根目录下的config.yml)， 后者称为 ==主题配置文件==(theme文件夹内的_config.yml)。</p>
</blockquote>
<h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><ul>
<li><p>Hexo 安装主题的方式非常简单，</p>
<ul>
<li><p>方法1:只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下。</p>
</li>
<li><p>方法2:在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：//当然,用git 更方便了.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd your-hexo-site //就是folder根目录</div><div class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: landscape 改为 theme: next</div></pre></td></tr></table></figure>
<p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>
<h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 hexo s –debug。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
<p>此时即可使用浏览器访问<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>, 检查站点是否正确运行。<br><img src="http://ww2.sinaimg.cn/large/72f96cbagw1f7s4jeiw9fj20lf0bxq3m.jpg" alt=""></p>
<p>出现如上图片说明:你已经成功安装并启用了 NexT 主题。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。</p>
<h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><h3 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h3><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p>
<p>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白<br>Mist - Muse 的紧凑版本，整洁有序的单栏外观<br>Pisces - 双栏 Scheme，小家碧玉似的清新<br>Scheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你不需用启用的 scheme 前面注释 # 即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">选用Pisce Scheme</div><div class="line">#scheme: Muse</div><div class="line">#scheme: Mist</div><div class="line">scheme: Pisces</div></pre></td></tr></table></figure>
<h3 id="设置-语言"><a href="#设置-语言" class="headerlink" title="设置 语言"></a>设置 语言</h3><p>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans  //注意,这里: 后面也要有空格</div></pre></td></tr></table></figure>
<h3 id="设置-侧栏"><a href="#设置-侧栏" class="headerlink" title="设置 侧栏"></a>设置 侧栏</h3><ul>
<li><p>主题配置文件 里</p>
<ul>
<li>1.设置侧栏的位置，修改 sidebar.position 的值，支持的选项有：</li>
</ul>
<p>left - 靠左放置<br>right - 靠右放置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sidebar:</div><div class="line">  # Sidebar Position, available value: left | right</div><div class="line">  #position: left</div><div class="line">  position: right</div></pre></td></tr></table></figure>
<ul>
<li>2.设置侧栏显示的时机，修改 sidebar.display 的值，支持的选项有：</li>
</ul>
</li>
</ul>
<p>​              post - 默认行为，在文章页面（拥有目录列表）时显示<br>​              always - 在所有页面中都显示<br>​              hide - 在所有页面中都隐藏（可以手动展开）<br>​              remove - 完全移除</p>
<pre><code>display: post
  #display: always
  #display: hide
  #display: remove
</code></pre><h3 id="设置-头像"><a href="#设置-头像" class="headerlink" title="设置 头像"></a>设置 头像</h3><p>编辑 站点配置文件， 新增字段 avatar， 值设置成头像的链接地址。其中，头像的链接地址可以是</p>
<p>avatar: <a href="http://example.com/avtar.png" target="_blank" rel="external">http://example.com/avtar.png</a></p>
<p>avatar: <a href="http://ww2.sinaimg.cn/large/72f96cbajw1f7s58btvquj20go0cimy0.jpg" target="_blank" rel="external">http://ww2.sinaimg.cn/large/72f96cbajw1f7s58btvquj20go0cimy0.jpg</a>    //这是我加的</p>
<h3 id="设置-作者昵称"><a href="#设置-作者昵称" class="headerlink" title="设置 作者昵称"></a>设置 作者昵称</h3><p>编辑 站点配置文件， 设置 author 为你的昵称。</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">author: yourName</div></pre></td></tr></table></figure>
<h3 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h3><p>编辑 站点配置文件， 设置 description 字段为你的站点描述。站点描述可以是你喜欢的一句签名:)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">description: yourWord</div></pre></td></tr></table></figure>
<h2 id="集成第三方服务"><a href="#集成第三方服务" class="headerlink" title="集成第三方服务"></a>集成第三方服务</h2><h3 id="多说评论-难度-2颗星-不需要翻墙"><a href="#多说评论-难度-2颗星-不需要翻墙" class="headerlink" title="多说评论(难度:2颗星,不需要翻墙)"></a>多说评论(难度:2颗星,不需要翻墙)</h3><p>登录<a href="http://duoshuo.com" target="_blank" rel="external">多说官网</a>后在首页选择 “我要安装”。<br>创建站点，填写站点相关信息。 多说域名 这一栏填写的即是你的 duoshuo_shortname，</p>
<p>创建站点完成后在 站点配置文件 中新增 duoshuo_shortname 字段，值设置成上一步中的值。</p>
<p>假如多说域名填写的为adfa  ,那么在 站点配置文件 里,最后面添加这么一行:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_shortname: adfa</div></pre></td></tr></table></figure>
<h3 id="多说分享-同上"><a href="#多说分享-同上" class="headerlink" title="多说分享(同上)"></a>多说分享(同上)</h3><blockquote>
<p>多说分享必须与多说评论同时使用!!!</p>
</blockquote>
<p>编辑 站点配置文件， 添加字段 duoshuo_share， 值为 true。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_share: true</div></pre></td></tr></table></figure>
<h3 id="多说热评文章-同上"><a href="#多说热评文章-同上" class="headerlink" title="多说热评文章 (同上)"></a>多说热评文章 (同上)</h3><p>站点/主题配置文件 中设置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_hotartical: true</div></pre></td></tr></table></figure>
<h3 id="Google分析统计-难度-2颗星-需要翻墙"><a href="#Google分析统计-难度-2颗星-需要翻墙" class="headerlink" title="Google分析统计(难度:2颗星,需要翻墙)"></a>Google分析统计(难度:2颗星,需要翻墙)</h3><p>编辑 站点配置文件， 新增字段 google_analytics， 值设置成你的 Google 跟踪 ID。跟踪 ID 通常是以 UA- 开头。</p>
<p><img src="http://ww4.sinaimg.cn/large/7853084cgw1f7te3rnwnqj20h605p3ys.jpg" alt=""></p>
<p>例如如果 Google 跟踪 ID为UA-110-110,那么在站点配置文件[^注2]最后一行添加:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">google_analytics: UA-110-110</div></pre></td></tr></table></figure>
<h3 id="阅读次数统计（LeanCloud-难度-4颗星-不需要翻墙"><a href="#阅读次数统计（LeanCloud-难度-4颗星-不需要翻墙" class="headerlink" title="阅读次数统计（LeanCloud)(难度:4颗星,不需要翻墙)"></a>阅读次数统计（LeanCloud)(难度:4颗星,不需要翻墙)</h3><p>选用LeanCloud    请查看此网页<a href="https://notes.wanghao.work/2015-10-21-为NexT主题添加文章阅读量统计功能.html#配置LeanCloud" target="_blank" rel="external">为Next主题添加文章阅读量统计</a></p>
<h2 id="一些常用命令："><a href="#一些常用命令：" class="headerlink" title="一些常用命令："></a>一些常用命令：</h2><p>git内cd进入到floder目录下时<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">hexo clean #清除 Hexo 的缓存。</div><div class="line">hexo new page &quot;pageName&quot; #新建页面</div><div class="line">hexo generate #生成静态页面至public目录</div><div class="line">hexo server #开启预览访问端口（默认地址http://localhost:4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">hexo deploy #将.deploy目录部署到GitHub,可与hexo g合并为 hexo d -g </div><div class="line">hexo help  # 查看帮助</div><div class="line">hexo version  #查看Hexo的版本</div><div class="line"></div><div class="line">简要二步曲:</div><div class="line">hexo new page &quot;pageName&quot; #新建页面  新建成功后,在folder/source/_post内修改文章内容</div><div class="line">hexo d -g  #生成目录后部署到GitHub</div></pre></td></tr></table></figure></p>
<p>别人推荐的几款个人认为不错的主题,(我暂时还没试用)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">　Oishi - A white theme based on Landscape plus and Writing. </div><div class="line">　Sidebar - Another theme based on Light with a simple sidebar </div><div class="line">　TKL - A responsive design theme for Hexo. 一个设计优雅的响应式主题 </div><div class="line">　Tinnypp - A clean, simple theme based on Tinny </div><div class="line">　Writing - A small and simple hexo theme based on Light </div><div class="line">　Yilia - Responsive and simple style 优雅简洁响应式主题。 </div><div class="line">　Pacman voidy - A theme with dynamic tagcloud and dynamic snow</div></pre></td></tr></table></figure></p>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>hexo new page “pageName” #新建页面  将会在/folder/source/_post目录下生成<code>pageName.md</code></p>
<p>但是这并不是显示在网页中的名称,编辑网页名称,在<code>pageName.md</code>内的YAML Front Matters 中修改title的值:如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">title: Github&amp;Hexo&amp;Next搭建个人博客实践</div></pre></td></tr></table></figure>
<h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><ul>
<li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">next使用手册</a></li>
<li><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hexo文档</a></li>
<li><a href="http://baixin.io/2015/08/HEXO搭建个人博客/" target="_blank" rel="external">HEXO搭建个人博客</a></li>
<li><a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="external">hexo常用的命令</a> 赞!</li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool" target="_blank" rel="external">hexo你的博客 | 不如</a> 大神!!!</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/06/13/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python]]></title>
      <url>http://yoursite.com/2016/03/22/python/</url>
      <content type="html"><![CDATA[<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p>如果字符串里面有很多字符都需要转义，就需要加很多\，为了简化，Python还允许用r’’表示’’内部的字符串默认不转义</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; print(&apos;\\\t\\&apos;)</div><div class="line">\       \</div><div class="line">&gt;&gt;&gt; print(r&apos;\\\t\\&apos;)</div><div class="line">\\\t\\</div></pre></td></tr></table></figure>
<p>如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，Python允许用’’’…’’’的格式表示多行内容，可以自己试试：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; print(&apos;&apos;&apos;line1</div><div class="line">... line2</div><div class="line">... line3&apos;&apos;&apos;)</div><div class="line">line1</div><div class="line">line2</div><div class="line">line3</div></pre></td></tr></table></figure>
<ul>
<li>常量</li>
</ul>
<p>所谓常量就是不能变的变量，比如常用的数学常数π就是一个常量。在Python中，<strong>通常用全部大写的变量名表示常量：</strong></p>
<p>PI = 3.14159265359</p>
<ul>
<li>无论整数做//除法还是取余数，结果永远是整数<ul>
<li>// 是只取整,比如10//3 会返回3</li>
</ul>
</li>
</ul>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>对于单个字符的编码，Python提供了ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; ord(&apos;A&apos;)</div><div class="line">65</div><div class="line">&gt;&gt;&gt; ord(&apos;中&apos;)</div><div class="line">20013</div><div class="line">&gt;&gt;&gt; chr(66)</div><div class="line">&apos;B&apos;</div><div class="line">&gt;&gt;&gt; chr(25991)</div><div class="line">&apos;文&apos;</div></pre></td></tr></table></figure>
<h3 id="关于编码"><a href="#关于编码" class="headerlink" title="关于编码"></a>关于编码</h3>]]></content>
    </entry>
    
  
  
</search>
